<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gaming & Vlogging Platform</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
        }
        .container {
            max-width: 500px;
            margin: 50px auto;
            background: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }
        h1 {
            text-align: center;
            color: #333;
        }
        form {
            display: flex;
            flex-direction: column;
        }
        label {
            margin: 10px 0 5px;
            font-weight: bold;
        }
        input, button {
            padding: 10px;
            margin-bottom: 15px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }
        button {
            background-color: #007BFF;
            color: white;
            cursor: pointer;
        }
        button:hover {
            background-color: #0056b3;
        }
        .link {
            text-align: center;
            margin-top: 10px;
        }
        .link a {
            color: #007BFF;
            text-decoration: none;
        }
        .link a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Welcome to the Platform</h1>
        <form id="signup-form">
            <label for="username">Username</label>
            <input type="text" id="username" name="username" required>

            <label for="email">Email</label>
            <input type="email" id="email" name="email" required>

            <label for="password">Password</label>
            <input type="password" id="password" name="password" required>

            <label for="verification-code">Verification Code</label>
            <input type="text" id="verification-code" name="verification-code" required>

            <button type="submit">Create Account</button>
        </form>
        <div class="link">
            <p>Already have an account? <a href="#">Login here</a></p>
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const users = [];

            // Function to create a new user profile
            function createUser(username, email) {
                return {
                    username,
                    email,
                    followers: 0,
                    isVerified: false,
                    bankAccountLinked: false,
                    balance: 0
                };
            }

            // Function to follow another user
            function followUser(user, targetUser) {
                if (user.username !== targetUser.username && !targetUser.followers.includes(user.username)) {
                    targetUser.followers++;
                    if (targetUser.followers >= 4000) {
                        targetUser.isVerified = true;
                    }
                }
            }

            // Function to link a bank account
            function linkBankAccount(user) {
                user.bankAccountLinked = true;
            }

            // Function to send money
            function sendMoney(sender, receiver, amount) {
                if (sender.bankAccountLinked && receiver.bankAccountLinked && sender.balance >= amount) {
                    sender.balance -= amount;
                    receiver.balance += amount;
                    alert(`$${amount} sent to ${receiver.username}`);
                } else {
                    alert('Transaction failed. Ensure both users have linked bank accounts and sufficient balance.');
                }
            }

            // Example usage
            const user1 = createUser('User1', 'user1@example.com');
            const user2 = createUser('User2', 'user2@example.com');
            users.push(user1, user2);

            linkBankAccount(user1);
            linkBankAccount(user2);

            user1.balance = 100; // Add balance to user1
            sendMoney(user1, user2, 50); // Send money from user1 to user2

            followUser(user2, user1); // User2 follows User1
            console.log(users);
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const scheduleForm = document.createElement('form');
            scheduleForm.id = 'schedule-form';
            scheduleForm.innerHTML = `
                <label for="live-time">Schedule Live Time</label>
                <input type="datetime-local" id="live-time" name="live-time" required>
                <button type="submit">Schedule</button>
            `;

            const container = document.querySelector('.container');
            container.appendChild(scheduleForm);

            scheduleForm.addEventListener('submit', (event) => {
                event.preventDefault();
                const liveTime = document.getElementById('live-time').value;
                if (liveTime) {
                    alert(`You have scheduled your live session for ${new Date(liveTime).toLocaleString()}`);
                } else {
                    alert('Please select a valid date and time.');
                }
            });
        });
    </script>
    <script></script>
        document.addEventListener('DOMContentLoaded', () => {
            const settingsForm = document.createElement('form');
            settingsForm.id = 'settings-form';
            settingsForm.innerHTML = `
                <h2>Account Settings</h2>
                <label for="profile-picture">Set Profile Picture</label>
                <input type="file" id="profile-picture" name="profile-picture" accept="image/*">

                <label for="new-password">Change Password</label>
                <input type="password" id="new-password" name="new-password" required>

                <label for="verification-code">Verification Code</label>
                <input type="text" id="verification-code-settings" name="verification-code-settings" required>

                <button type="submit">Save Changes</button>
            `;

            const container = document.querySelector('.container');
            container.appendChild(settingsForm);

            settingsForm.addEventListener('submit', (event) => {
                event.preventDefault();
                const newPassword = document.getElementById('new-password').value;
                const verificationCode = document.getElementById('verification-code-settings').value;

                if (verificationCode === '123456') { // Replace with actual verification logic
                    alert('Your password has been changed successfully!');
                } else {
                    alert('Invalid verification code. Please try again.');
                }
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const signupForm = document.getElementById('signup-form');

            signupForm.addEventListener('submit', (event) => {
                event.preventDefault();

                const username = document.getElementById('username').value;
                const email = document.getElementById('email').value;
                const password = document.getElementById('password').value;
                const verificationCode = document.getElementById('verification-code').value;

                if (users.some(user => user.username === username)) {
                    alert('This username is already taken. Please choose a different one.');
                } else {
                    if (verificationCode === '123456') { // Replace with actual verification logic
                        const newUser = {
                            username,
                            email,
                            password,
                            followers: 0,
                            isVerified: false,
                            bankAccountLinked: false,
                            balance: 0
                        };
                        users.push(newUser);
                        alert('Account created successfully!');
                        signupForm.reset();
                    } else {
                        alert('Invalid verification code. Please try again.');
                    }
                }
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const createChannelForm = document.createElement('form');
            createChannelForm.id = 'create-channel-form';
            createChannelForm.innerHTML = `
                <h2>Create a Channel</h2>
                <label for="channel-name">Channel Name</label>
                <input type="text" id="channel-name" name="channel-name" required>
                <button type="submit">Create Channel</button>
            `;

            const postContentForm = document.createElement('form');
            postContentForm.id = 'post-content-form';
            postContentForm.innerHTML = `
                <h2>Post Content</h2>
                <label for="short-video">Upload Short Video</label>
                <input type="file" id="short-video" name="short-video" accept="video/*">
                
                <label for="picture">Upload Picture</label>
                <input type="file" id="picture" name="picture" accept="image/*">
                
                <button type="submit">Post</button>
            `;

            const container = document.querySelector('.container');
            container.appendChild(createChannelForm);
            container.appendChild(postContentForm);

            createChannelForm.addEventListener('submit', (event) => {
                event.preventDefault();

                const channelName = document.getElementById('channel-name').value;
                const currentUser = users.find(user => user.username === document.getElementById('username').value);

                if (currentUser) {
                    if (currentUser.followers >= 2000 || currentUser.isVerified) {
                        alert(`Channel "${channelName}" created successfully!`);
                    } else {
                        alert('You need at least 2000 followers or a verified account to create a channel.');
                    }
                } else {
                    alert('User not found. Please sign up or log in.');
                }
            });

            postContentForm.addEventListener('submit', (event) => {
                event.preventDefault();

                const shortVideo = document.getElementById('short-video').files[0];
                const picture = document.getElementById('picture').files[0];

                if (shortVideo || picture) {
                    alert('Your content has been posted successfully!');
                } else {
                    alert('Please upload a short video or a picture to post.');
                }
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const communityGuidelines = [
                "No use of abusive language",
                "No posting inappropriate content"
            ];

            function checkCommunityGuidelines(content) {
                return communityGuidelines.every(rule => !content.includes(rule));
            }

            const postContentForm = document.getElementById('post-content-form');
            postContentForm.addEventListener('submit', (event) => {
                event.preventDefault();

                const shortVideo = document.getElementById('short-video').files[0];
                const picture = document.getElementById('picture').files[0];
                const contentDescription = "Sample content description"; // Replace with actual content description logic

                if (checkCommunityGuidelines(contentDescription)) {
                    if (shortVideo || picture) {
                        alert('Your content has been posted successfully and adheres to community guidelines!');
                    } else {
                        alert('Please upload a short video or a picture to post.');
                    }
                } else {
                    alert('Your content violates community guidelines. Please review and try again.');
                }
            });

            const loginForm = document.createElement('form');
            loginForm.id = 'login-form';
            loginForm.innerHTML = `
                <h2>Login</h2>
                <label for="login-username">Username</label>
                <input type="text" id="login-username" name="login-username" required>
                
                <label for="login-password">Password</label>
                <input type="password" id="login-password" name="login-password" required>
                
                <label for="captcha">Are you a robot? (Type "no")</label>
                <input type="text" id="captcha" name="captcha" required>
                
                <button type="submit">Login</button>
            `;

            const container = document.querySelector('.container');
            container.appendChild(loginForm);

            loginForm.addEventListener('submit', (event) => {
                event.preventDefault();

                const username = document.getElementById('login-username').value;
                const password = document.getElementById('login-password').value;
                const captcha = document.getElementById('captcha').value;

                if (captcha.toLowerCase() === 'no') {
                    alert(`Welcome back, ${username}!`);
                } else {
                    alert('Verification failed. Please confirm you are not a robot.');
                }
            });

            // Add a section for purchasing games
            const purchaseGamesSection = document.createElement('div');
            purchaseGamesSection.id = 'purchase-games-section';
            purchaseGamesSection.innerHTML = `
                <h2>Purchase Games</h2>
                <p>Explore and purchase your favorite games from our partner, Epic Games.</p>
                <a href="https://www.epicgames.com/store/en-US/" target="_blank" style="color: #007BFF; text-decoration: none;">
                    Visit Epic Games Store
                </a>
            `;

            container.appendChild(purchaseGamesSection);

            // Add a section to display balance in pounds and USD
            const balanceSection = document.createElement('div');
            balanceSection.id = 'balance-section';
            balanceSection.innerHTML = `
                <h2>Your Balance</h2>
                <p>Pounds: <span id="balance-pounds">0</span> GBP</p>
                <p>USD: <span id="balance-usd">0</span> USD</p>
            `;

            container.appendChild(balanceSection);

            // Example logic to update balance (replace with actual logic)
            const userBalance = {
                pounds: 100,
                usd: 120
            };

            document.getElementById('balance-pounds').textContent = userBalance.pounds;
            document.getElementById('balance-usd').textContent = userBalance.usd;
        });
    </script>
    <!-- Add a section for purchasing gaming products -->
    <div id="purchase-products-section">
        <h2>Purchase Gaming Products</h2>
        <p>Explore and purchase gaming products from our partner, Amazon.</p>
        <a href="https://www.amazon.com/s?k=gaming+products" target="_blank" style="color: #007BFF; text-decoration: none;">
            Visit Amazon Gaming Products
        </a>
    </div>
    <!-- Add a section for premium features -->
    <div id="premium-section">
        <h2>Premium Features</h2>
        <p>Unlock advanced features like AI-powered photo and video editing by upgrading to Premium.</p>
        <form id="premium-payment-form">
            <label for="payment-method">Choose Payment Method</label>
            <select id="payment-method" name="payment-method" required>
                <option value="credit-card">Credit Card</option>
                <option value="paypal">PayPal</option>
            </select>

            <label for="card-details">Card Details</label>
            <input type="text" id="card-details" name="card-details" placeholder="Card Number" required>

            <label for="paypal-email">PayPal Email</label>
            <input type="email" id="paypal-email" name="paypal-email" placeholder="Email" required>

            <button type="submit">Upgrade to Premium</button>
        </form>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const premiumPaymentForm = document.getElementById('premium-payment-form');
            const paymentMethodSelect = document.getElementById('payment-method');
            const cardDetailsInput = document.getElementById('card-details');
            const paypalEmailInput = document.getElementById('paypal-email');

            // Toggle visibility of payment fields based on selected method
            paymentMethodSelect.addEventListener('change', () => {
                if (paymentMethodSelect.value === 'credit-card') {
                    cardDetailsInput.style.display = 'block';
                    paypalEmailInput.style.display = 'none';
                } else if (paymentMethodSelect.value === 'paypal') {
                    cardDetailsInput.style.display = 'none';
                    paypalEmailInput.style.display = 'block';
                }
            });

            // Initialize visibility
            paymentMethodSelect.dispatchEvent(new Event('change'));

            premiumPaymentForm.addEventListener('submit', (event) => {
                event.preventDefault();
                const paymentMethod = paymentMethodSelect.value;
                const paymentDetails = paymentMethod === 'credit-card' ? cardDetailsInput.value : paypalEmailInput.value;

                if (paymentDetails) {
                    alert(`Thank you for upgrading to Premium using ${paymentMethod}!`);
                    premiumPaymentForm.reset();
                } else {
                    alert('Please provide valid payment details.');
                }
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Add a section for live streaming and screen recording
            const liveStreamSection = document.createElement('div');
            liveStreamSection.id = 'live-stream-section';
            liveStreamSection.innerHTML = `
                <h2>Live Streaming & Screen Recording</h2>
                <video id="live-stream-video" autoplay muted style="width: 100%; border: 1px solid #ccc;"></video>
                <button id="start-stream">Start Live Stream</button>
                <button id="stop-stream" disabled>Stop Live Stream</button>
                <button id="start-recording">Start Recording</button>
                <button id="stop-recording" disabled>Stop Recording</button>
            `;

            const container = document.querySelector('.container');
            container.appendChild(liveStreamSection);

            const videoElement = document.getElementById('live-stream-video');
            const startStreamButton = document.getElementById('start-stream');
            const stopStreamButton = document.getElementById('stop-stream');
            const startRecordingButton = document.getElementById('start-recording');
            const stopRecordingButton = document.getElementById('stop-recording');

            let mediaStream = null;
            let mediaRecorder = null;
            let recordedChunks = [];

            // Start live stream
            startStreamButton.addEventListener('click', async () => {
                try {
                    mediaStream = await navigator.mediaDevices.getDisplayMedia({ video: true, audio: true });
                    videoElement.srcObject = mediaStream;

                    // Add SAVINGBLOT logo overlay for non-premium users
                    const isPremium = false; // Replace with actual premium check
                    if (!isPremium) {
                        const logo = document.createElement('div');
                        logo.textContent = 'SAVINGBLOT';
                        logo.style.position = 'absolute';
                        logo.style.top = '10px';
                        logo.style.right = '10px';
                        logo.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';
                        logo.style.color = 'white';
                        logo.style.padding = '5px 10px';
                        logo.style.borderRadius = '5px';
                        logo.style.zIndex = '1000';
                        videoElement.parentElement.appendChild(logo);
                    }

                    startStreamButton.disabled = true;
                    stopStreamButton.disabled = false;
                } catch (error) {
                    alert('Failed to start live stream: ' + error.message);
                }
            });

            // Stop live stream
            stopStreamButton.addEventListener('click', () => {
                if (mediaStream) {
                    mediaStream.getTracks().forEach(track => track.stop());
                    videoElement.srcObject = null;
                    mediaStream = null;
                }
                startStreamButton.disabled = false;
                stopStreamButton.disabled = true;
            });

            // Start recording
            startRecordingButton.addEventListener('click', () => {
                if (mediaStream) {
                    mediaRecorder = new MediaRecorder(mediaStream);
                    recordedChunks = [];

                    mediaRecorder.ondataavailable = event => {
                        if (event.data.size > 0) {
                            recordedChunks.push(event.data);
                        }
                    };

                    mediaRecorder.onstop = () => {
                        const blob = new Blob(recordedChunks, { type: 'video/webm' });
                        const url = URL.createObjectURL(blob);
                        const a = document.createElement('a');
                        a.href = url;
                        a.download = 'recording.webm';
                        a.click();
                        URL.revokeObjectURL(url);
                    };

                    mediaRecorder.start();
                    startRecordingButton.disabled = true;
                    stopRecordingButton.disabled = false;
                } else {
                    alert('Please start the live stream before recording.');
                }
            });

            // Stop recording
            stopRecordingButton.addEventListener('click', () => {
                if (mediaRecorder) {
                    mediaRecorder.stop();
                    startRecordingButton.disabled = false;
                    stopRecordingButton.disabled = true;
                }
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const videoElement = document.getElementById('live-stream-video');

            // Adjust SAVINGBLOT logo position to top-left corner
            const logo = document.createElement('div');
            logo.textContent = 'SAVINGBLOT';
            logo.style.position = 'absolute';
            logo.style.top = '10px';
            logo.style.left = '10px'; // Changed from right to left
            logo.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';
            logo.style.color = 'white';
            logo.style.padding = '5px 10px';
            logo.style.borderRadius = '5px';
            logo.style.zIndex = '1000';

            videoElement.parentElement.appendChild(logo);

            // Add copyright information
            const footer = document.createElement('footer');
            footer.textContent = `© ${new Date().getFullYear()} SAVINGBLOT`;
            footer.style.textAlign = 'center';
            footer.style.marginTop = '20px';
            footer.style.color = '#333';
            footer.style.fontSize = '14px';

            document.body.appendChild(footer);

            // Set the background image
            document.body.style.backgroundImage = 'url("/mnt/chromeos/MyFiles/Downloads/pexels-artempodrez-7773991.jpg")';
            document.body.style.backgroundSize = 'cover';
            document.body.style.backgroundPosition = 'center';
            document.body.style.backgroundRepeat = 'no-repeat';
        });
    </script>
</body>
</html>
